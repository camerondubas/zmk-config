/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

// Layers

#define DEFAULT    0

// Constants

#define TAP_TERM_MS 175

// Key Names

#define PREV_WIN LS(LA(LC(TAB)))
#define NEXT_WIN LA(LC(TAB))

&mt { tapping-term-ms = <TAP_TERM_MS>; };

/ {
    behaviors {
        tp: hold_symbol {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_SYMBOL";
            #binding-cells = <2>;
            tapping_term_ms = <TAP_TERM_MS>;
            quick_tap_ms = <TAP_TERM_MS>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ht_hp: hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PREFERRED";
            #binding-cells = <2>;
            tapping_term_ms = <TAP_TERM_MS>;
            quick_tap_ms = <TAP_TERM_MS>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE     &kp Q  &kp W  &kp F     &kp P      &kp B   &kp J   &kp L            &kp U               &kp Y    &kp SEMI   &kp
&tp LALT ESC  &kp A  &kp R  &kp S     &kp T      &kp G   &kp M   &kp N            &kp E               &kp I    &kp O      &kp SQT
&kp LGUI      &kp Z  &kp X  &kp C     &kp D      &kp V   &kp K   &kp H            &kp COMMA           &kp DOT  &kp SLASH  &kp EQUAL
                            &kp BSPC  &kt LCTRL  &trans  &trans  &mt LS(RET) RET  &ht_hp LSHFT SPACE
            >;
        };

        symbol {
            bindings = <
&kp TILDE            &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(PIPE)  &kp LS(COLON)  &kp LS(UNDER)
&mt LEFT_ALT ESCAPE  &kp N1        &kp N2      &kp N3         &kp N4        &kp N5         &kp N6         &kp N7        &kp N8        &kp N9        &kp N0         &kp LS(DQT)
&kp LWIN             &kp BSLH      &kp LBKT    &kp LS(LBRC)   &kp LS(LPAR)  &kp LS(LT)     &kp LS(GT)     &kp LS(RPAR)  &kp LS(RBRC)  &kp RBKT      &kp LS(QMARK)  &kp LS(PLUS)
                                               &trans         &trans        &trans         &trans         &trans        &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(N3)   &kp LG(N4)  &kp LG(N5)  &kp LG(N6)
&trans  &trans  &trans  &trans  &trans  &trans  &kp LG(N7)        &kp LEFT          &kp UP       &kp DOWN    &kp RIGHT   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &kp PG_UP         &kp LS(TAB)  &kp TAB     &kp PG_DN   &trans
                        &trans  &trans  &trans  &trans            &trans            &trans
            >;
        };
    };
};

// Template:  ┌  ┘ │ ┤ └ ┴ ┬ ├ ─ ┼ ┐
// ┌───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┐  ┌───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┐
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤  ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤  ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// └───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤  ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────┘
//                                                 └───────────────┴───────────────┴───────────────┘  └───────────────┴───────────────┴───────────────┘
