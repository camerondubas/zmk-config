/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Layers
#define DEFAULT    0
#define SYMBOLS    1
#define NAV 2

// Constants
#define TAP_TERM_MS 165
#define COMBO_TIMEOUT_MS 75

/ {

    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_TERM_MS>;
            bindings = <&lt SYMBOLS BACKSPACE>, <&kp BACKSPACE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <3 2>;
            timeout-ms = <COMBO_TIMEOUT_MS>;
        };
    };

    macros {
        Hover: Hover {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&kp LC(K) &kp LC(I)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q  &kp W     &kp F        &kp P     &kp G               &kp J              &kp L              &kp U              &kp Y           &kp SEMI        &none
&none  &kp A  &kp R     &kp S        &lt NAV T &kp D               &kp H              &kp N              &kp E              &kp I           &kp O           &none
&none  &kp Z  &kp X     &kp C        &kp V     &kp B               &kp K              &kp M              &kp COMMA          &kp DOT         &kp FSLH        &none
                        &kp LGUI     &td0      &ht_hp LCTRL TAB    &mt RET LS(RET)    &mt LSHFT SPACE    &mt LC(LS(P)) LC(P)
            >;
        };

        lower_layer {
            bindings = <
&trans          &kp CAPS  &kp LBRC      &kp LPAR    &kp LBKT   &trans   &trans      &kp RBKT      &kp RPAR   &kp RBRC    &trans    &trans
&trans          &kp N1    &kp N2        &kp N3      &kp N4     &kp N5   &kp N6      &kp N7        &kp N8     &kp N9      &kp N0    &trans
&trans          &trans    &trans        &trans      &trans     &trans   &trans      &trans        &trans     &trans      &trans    &trans
                                                    &trans     &trans   &trans      &trans        &trans     &trans
            >;
        };

        raise_layer {
            bindings = <
&trans          &trans          &kp F2          &trans          &trans          &trans          &trans          &kp HOME                &kp PAGE_UP             &kp PAGE_DOWN           &kp END                 &trans
&trans          &kp LC(LS(R))   &kp LA(F12)     &kp LALT        &trans          &trans          &trans          &kp LEFT                &kp UP                  &kp DOWN                &kp RIGHT               &trans
&trans          &trans          &trans          &trans          &trans          &trans          &trans          &kp LC(PAGE_UP)         &kp LS(LA(LC(TAB)))     &kp LA(LC(TAB))         &kp LC(PAGE_DOWN)       &trans
                                                &trans          &trans          &trans          &trans          &trans                  &trans
            >;
        };
    };
};
